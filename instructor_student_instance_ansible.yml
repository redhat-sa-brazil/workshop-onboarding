- name: Cria instancias Gcloud Openshift para Workshop
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    machine_type_node: n1-standard-1
    machine_type_small: g1-small
    zone: southamerica-east1-a
    region: southamerica-east1
    image: centos-7
    preemptible: false
    tamanho_disco_pequeno: 40
    tamanho_disco_grande: 50
    tamanho_disco_adicional: 50
    master_private_ip: ""
    infranode_private_ip: ""
    node1_private_ip: ""

  tasks:

  - name: Carregando variaveis de config.yml
    include_vars: config.yml

  - name: "Cria Disco 1 instancia {{ user }}"
    gce_pd:
      name: "{{ user }}disk01"
      image: "{{ image }}"
      size_gb: "{{ tamanho_disco_pequeno }}"
      zone: "{{ zone  }}"
      service_account_email: "{{ service_account_email }}"
      credentials_file: "{{ credentials_file }}"
      project_id: "{{ project_id }}"

  - name: "Cria Disco 1 instancia {{ user }}-server1"
    gce_pd:
      name: "{{ user }}disk02"
      image: "{{ image }}"
      size_gb: "{{ tamanho_disco_pequeno }}"
      zone: "{{ zone  }}"
      service_account_email: "{{ service_account_email }}"
      credentials_file: "{{ credentials_file }}"
      project_id: "{{ project_id }}"

  - name: "Cria Disco 1 instancia {{ user }}-server2"
    gce_pd:
      name: "{{ user }}disk03"
      image: "{{ image }}"
      size_gb: "{{ tamanho_disco_pequeno }}"
      zone: "{{ zone  }}"
      service_account_email: "{{ service_account_email }}"
      credentials_file: "{{ credentials_file }}"
      project_id: "{{ project_id }}"

  - name: "Cria ip estatico {{ user }}"
    gce_eip:
     service_account_email: "{{ service_account_email }}"
     credentials_file: "{{ credentials_file }}"
     project_id: "{{ project_id }}"
     name: "ip-{{ user }}"
     region: "{{ region }}"
     state: present


  - name: "Cria Instancia {{ user }}"
    gce:
        instance_names: "{{ user }}"
        machine_type: "{{ machine_type_node }}"
        image: "{{ image }}"
        zone: "{{ zone }}"
	external_ip: "ip-{{ user }}"        
        preemptible: "{{ preemptible }}"
        tags:
         - http-server
         - https-server
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        metadata: '{"sshKeys":"root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQK+dX349U1PV9qmMvj6DgZnnnTVfkLodRZ0MOBFSCzXYhN4KQMPuom/oJAPPYBpHEbaYOocZRTVIYuPO5u7gwXOx+oazmvhzpmjO6R/ZwiY8X4a07LonuxWhf2ry0cWAIVr06x+5AOuBBrJazdVxwhPYlJC4QEdMMAxtFB+uRU6nhSjPzxVGAbZSNTGvrlasDLcxkQLAsnETEFldopStW/t12udEm5nnBPNi2S9WG2eru5mPKPyug4WkqYxjdBRNCwnKUl5NV9r7GM25SxXpbjf72fFSRSCzOLe3eiC9z6/TFzlSmWjGZRNqGEcbKj3HdLBJZSSIOq3vYX0+EItg/", "ansible-core:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmg6/1H29uMnS/8CpKRFZt+VyjAfYavUL/XZ8SY/3+dlqaC3nvhC9pYFtQ3OcY6q0g/IknhKsH/4LdKj8lMQ+SQKl7WSzS86NmSSAXduN3b8v/mlv1t451f+L0+Eol8556W3Cv9C7VsRL9MKC79TN94oia1ieCdhCbaaqqc9yiH1xBpSukB6Ro2yXCcfqxJWNjocBy9oeGfcgxA/9jIkiTFPDP1YR3Ujng3DQyOdJ+7ogtmtadKR6f057MCvJqGnzlBjipWLDTPkSTKbLIaEgR2KZ7X9+6QgdIAz+LrMsqx+jHkq/xhGZF7IgpyeKchtIyuLnl13J5airyLgE4mwrl"}'
        disks:
        - name: "{{ user }}disk01"
          mode: READ_WRITE
    register: gce_node

  - name: "Cria Instancia {{ user }}-server1"
    gce:
        instance_names: "{{ user }}-server1"
        machine_type: "{{ machine_type_small }}"
        image: "{{ image }}"
        zone: "{{ zone }}"
        external_ip: none
        preemptible: "{{ preemptible }}"
        tags:
         - http-server
         - https-server
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        metadata: '{"sshKeys":"root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQK+dX349U1PV9qmMvj6DgZnnnTVfkLodRZ0MOBFSCzXYhN4KQMPuom/oJAPPYBpHEbaYOocZRTVIYuPO5u7gwXOx+oazmvhzpmjO6R/ZwiY8X4a07LonuxWhf2ry0cWAIVr06x+5AOuBBrJazdVxwhPYlJC4QEdMMAxtFB+uRU6nhSjPzxVGAbZSNTGvrlasDLcxkQLAsnETEFldopStW/t12udEm5nnBPNi2S9WG2eru5mPKPyug4WkqYxjdBRNCwnKUl5NV9r7GM25SxXpbjf72fFSRSCzOLe3eiC9z6/TFzlSmWjGZRNqGEcbKj3HdLBJZSSIOq3vYX0+EItg/", "ansible-core:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmg6/1H29uMnS/8CpKRFZt+VyjAfYavUL/XZ8SY/3+dlqaC3nvhC9pYFtQ3OcY6q0g/IknhKsH/4LdKj8lMQ+SQKl7WSzS86NmSSAXduN3b8v/mlv1t451f+L0+Eol8556W3Cv9C7VsRL9MKC79TN94oia1ieCdhCbaaqqc9yiH1xBpSukB6Ro2yXCcfqxJWNjocBy9oeGfcgxA/9jIkiTFPDP1YR3Ujng3DQyOdJ+7ogtmtadKR6f057MCvJqGnzlBjipWLDTPkSTKbLIaEgR2KZ7X9+6QgdIAz+LrMsqx+jHkq/xhGZF7IgpyeKchtIyuLnl13J5airyLgE4mwrl"}'
        project_id: "{{ project_id }}"
        disks:
        - name: "{{ user }}disk02"
          mode: READ_WRITE

  - name: "Cria Instancia {{ user }}-server2"
    gce:
        instance_names: "{{ user }}-server2"
        machine_type: "{{ machine_type_small }}"
        image: "{{ image }}"
        zone: "{{ zone }}"
        external_ip: none
        preemptible: "{{ preemptible }}"
        tags:
         - http-server
         - https-server
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        metadata: '{"sshKeys":"root:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDQK+dX349U1PV9qmMvj6DgZnnnTVfkLodRZ0MOBFSCzXYhN4KQMPuom/oJAPPYBpHEbaYOocZRTVIYuPO5u7gwXOx+oazmvhzpmjO6R/ZwiY8X4a07LonuxWhf2ry0cWAIVr06x+5AOuBBrJazdVxwhPYlJC4QEdMMAxtFB+uRU6nhSjPzxVGAbZSNTGvrlasDLcxkQLAsnETEFldopStW/t12udEm5nnBPNi2S9WG2eru5mPKPyug4WkqYxjdBRNCwnKUl5NV9r7GM25SxXpbjf72fFSRSCzOLe3eiC9z6/TFzlSmWjGZRNqGEcbKj3HdLBJZSSIOq3vYX0+EItg/", "ansible-core:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCmg6/1H29uMnS/8CpKRFZt+VyjAfYavUL/XZ8SY/3+dlqaC3nvhC9pYFtQ3OcY6q0g/IknhKsH/4LdKj8lMQ+SQKl7WSzS86NmSSAXduN3b8v/mlv1t451f+L0+Eol8556W3Cv9C7VsRL9MKC79TN94oia1ieCdhCbaaqqc9yiH1xBpSukB6Ro2yXCcfqxJWNjocBy9oeGfcgxA/9jIkiTFPDP1YR3Ujng3DQyOdJ+7ogtmtadKR6f057MCvJqGnzlBjipWLDTPkSTKbLIaEgR2KZ7X9+6QgdIAz+LrMsqx+jHkq/xhGZF7IgpyeKchtIyuLnl13J5airyLgE4mwrl"}'
        project_id: "{{ project_id }}"
        disks:
        - name: "{{ user }}disk03"
          mode: READ_WRITE

  - name: Salva dados no grupo de inventario... usuario
    add_host:
      hostname: "{{ item.public_ip }}"
      groupname: gce_instances_ips
    with_items: "{{ gce_node.instance_data }}"

  - name: Grava IP da instancia na variavel ip_publico
    set_fact:
      ip_publico: "{{ item.public_ip }}"
    with_items: "{{ gce_node.instance_data }}"

  - name: Espera por SSH habilitado...
    wait_for:
      delay: 1
      host: "{{ item.public_ip }}"
      port: 22
      state: started
      timeout: 30
    with_items: "{{ gce_node.instance_data }}"

  - name: Login no cluster Openshift
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc login {{ cluster_openshift }} --token={{ token_openshift }} --insecure-skip-tls-verify"

  - name: Escolhe projeto
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc project {{ nome_projeto_openshift }}"

  - name: Cria deployment Wetty aluno
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc new-app lasher/wetty-student openshift={{ ip_publico }} --name=wetty-{{ user }} -n {{ nome_projeto_openshift }} || echo 'Ja existe'"

  - name: Pausa gatilho DC
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc rollout pause dc wetty-{{ user }} -n {{ nome_projeto_openshift }}"

  - name: Seta limites para wetty do aluno
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc set resources dc wetty-{{ user }} --limits=memory=50Mi -n {{ nome_projeto_openshift }} || echo 'Ja existe'"

  - name: Cria deployment Wetty aluno
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc rollout resume dc wetty-{{ user }} -n {{ nome_projeto_openshift }} || echo 'Ja existe'"

  - name: Cria rota para acesso ao wetty-aluno
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc expose svc/wetty-{{ user }} -n {{ nome_projeto_openshift }} || echo 'Ja existe'"

  - name: Obtem nome da rota wetty
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc get route wetty-{{ user }} --no-headers -n {{ nome_projeto_openshift }} | awk '{print $2}'"
    register: result_url_wetty

  - name: Cria deployment web_workshop
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc new-app LINK_FORM_FEEDBACK={{ link_form_feedback }} TOWER={{ endereco_tower }} IP_CLUSTER_OCP={{ cluster_openshift }} NOME_WORKSHOP={{ nome_workshop  }} ALUNO={{ user }} IP_INSTANCIA={{ ip_publico }} URL_WETTY=http://{{ result_url_wetty.stdout }} php~https://github.com/redhat-sa-brazil/workshop-onboarding-apps --context-dir=Workshop-PHP-Student/src --name=web-{{ user }} || echo 'Ja existe'"

  - name: Cria rota para acesso ao web-workshop...
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc expose svc/web-{{ user }} || echo 'Ja existe'"

  - name: Obtem nome da rota
    shell: "export KUBECONFIG=/tmp/kube.cfg; /usr/local/bin/oc get route web-{{ user }} --no-headers -n {{ nome_projeto_openshift }} | awk '{print $2}'"
    register: result_dominio_web_workshop

  - name: Envia email com dados para acesso
    mail:
      host: smtp.gmail.com
      port: 587
      username: "{{ email_remetente }}"
      password: "{{ senha_email }}"
      to: "<{{ email_aluno }}>"
      subject: "Dados para Workshop {{ nome_workshop }}"
      body: 'Seu ambiente de Workshop esta disponivel em {{ result_dominio_web_workshop.stdout }}'
    delegate_to: localhost

- name: "Configura Hosts seguindo roles... {{ hostvars['localhost']['chave_ssh'] }} "
  vars:
   ansible_ssh_private_key_file: "{{ hostvars['localhost']['chave_ssh'] }}"
  hosts: gce_instances_ips
  become: yes
  become_method: sudo
  remote_user: "{{ hostvars['localhost']['usuario_ssh_gce'] }}"
  roles:
    - postinstall-ansible

